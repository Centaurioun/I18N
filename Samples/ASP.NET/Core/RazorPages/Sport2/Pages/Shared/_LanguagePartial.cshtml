@using System.Globalization;
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Primitives;
@model SportModel
@inject IOptions<RequestLocalizationOptions> LocalicationOptions

@{
  var supportedCultures = LocalicationOptions.Value.SupportedUICultures
    .Select(cultureInfo => new SelectListItem { Value = cultureInfo.Name, Text = $"{Model.GetLanguageName(cultureInfo.Name)} - {cultureInfo.NativeName}" })
    .ToList();

  StringValues acceptLanguages;

  if (Context.Request.Headers.TryGetValue("Accept-Language", out acceptLanguages) && (acceptLanguages.Count > 0))
  {
    var acceptCulture = new CultureInfo(acceptLanguages[0].Split(",")[0]);

    supportedCultures.Insert(
      0, 
      new SelectListItem { Value = "", Text = String.Format(Localizer["Browser default language, currently {0}"].Value, Model.GetLanguageName(acceptCulture.Name)) });  //loc 0: language name
  }
}

<div>
  <form asp-page-handler="SetLanguage" method="post">
    @Localizer["Language: "] 
    <select name="culture" asp-for="@Model.CookieLanguage" asp-items="supportedCultures"></select>
    &nbsp;
    <button type="submit" class="btn btn-primary btn-space">@Localizer["Save"]</button>
  </form>
</div>
